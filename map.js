class Map{
    //フィールドとしてもっておく
    bombermap = [
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,0,1,0,1,0,1,0,1,0,1,0,1,0,1],
        [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
        [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
    ]

    constructor(WIDTH,HEIGHT){
        //thisの設定、プロパティの初期化
        this.WIDTH = WIDTH;
        this.HEIGHT = HEIGHT;
    }

    //(x,y)の座標が壁の中にあるか判定（boolean）
    isInsideWall(x,y) {
        let isIW = false
        //壁全探索
        for(var i=0; i<hblock; i++){
            for(var j=0; j<wblock; j++){
                if(this.bombermap[i][j]==1){
                    //ある一つの壁の内側に、与えられた(x,y)が入っているか(0.9ではなく1にしてしまうと1pxの誤差で道に入れないので、ゆとりを持たせるために0.9にしている。)
                    if((j-0.9)*(squareSize) < x && x < (j+0.9)*squareSize && (i-0.9)*squareSize < y && y < (i+0.9)*squareSize) {
                        isIW = true
                    }
                }
            }
        }
        return isIW
    }
}